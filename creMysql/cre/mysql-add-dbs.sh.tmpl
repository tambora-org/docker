#!/bin/bash 
export TERM=xterm
echo "mysql add databases:"
sleep 20

{{ $CurrentContainer := where $ "ID" .Docker.CurrentContainerID | first }}
{{ $rootPassword := or $CurrentContainer.Env.MYSQL_ROOT_PWD "_secret_" }}

{{ range $mysqlDb, $containers := groupByMulti $ "Env.MYSQL_DB" "," }}
##begin of all databases
## add db: {{ $mysqlDb }}

{{ range $index, $container := $containers }}
## begin of all containers
## add user and assign to db
## user: MYSQL_USER, MYSQL_PWD ?
{{ if $container.Env.MYSQL_USER }}
## MYSQL_USER : {{ $container.Env.MYSQL_USER }}
mysql_user="{{ $container.Env.MYSQL_USER }}"
{{ else }}
## NO USER: md5 of {{ $container.Env.MYSQL_DB }}
mysql_user="U:$(printf '%s' '{{ $container.Env.MYSQL_DB }}' | md5sum | cut -d ' ' -f 1)"
mysql_user="${mysql_user:0:24}"
{{ end }}
{{ if $container.Env.MYSQL_PWD }}
## MYSQL_PWD : {{ $container.Env.MYSQL_PWD }}
mysql_pwd="{{ $container.Env.MYSQL_PWD }}"
{{else}}
mysql_pwd="PWD:$(printf '%s' '$mysql_user:{{sha1 $rootPassword}}' | md5sum | cut -d ' ' -f 1)"
mysql_pwd="${pwd:0:32}"
{{ end }}

#maybe (??) import sql only if db did not exist before ??
if [ $(mysqlshow -h 127.0.0.1 -P 3306 --user=root --password={{$rootPassword}}  {{ $mysqlDb }} 1>/dev/null 2>/dev/null) -eq o ]; then
 echo "Database exists: {{ $mysqlDb }}"
else
 echo "Database missing: {{ $mysqlDb }}"
fi

echo "Creating database: {{ $mysqlDb }}"
mysql -h 127.0.0.1 -P 3306 --user=root --password={{$rootPassword}} -e "CREATE DATABASE IF NOT EXISTS \`{{ $mysqlDb }}\` CHARACTER SET utf8 COLLATE utf8_general_ci; FLUSH PRIVILEGES;"

echo "Create new User: $mysql_user with password $mysql_pwd for new database {{ $mysqlDb }}."
mysql -h 127.0.0.1 -P 3306 --user=root --password={{$rootPassword}} -e "GRANT ALL PRIVILEGES ON \`{{ $mysqlDb }}\`.* TO '$mysql_user'@'%' IDENTIFIED BY '$mysql_pwd' WITH GRANT OPTION; FLUSH PRIVILEGES;"

## if init sql file exists import data
{{ if (exists "/cre/mysql/dumps/{{ $mysqlDb }}/database.init.sql") }}
if [ -e /cre/mysql/dumps/{{ $mysqlDb }}/database.init.sql ]
then
   echo "Initialize datebase by file: {{ $mysqlDb }}"
   mysql -h 127.0.0.1 -P 3306 --user=root --password={{$rootPassword}} < /cre/mysql/dumps/{{ $mysqlDb }}/database.init.sql
   mv /cre/mysql/dumps/{{ $mysqlDb }}/database.init.sql /cre/mysql/dumps/{{ $mysqlDb }}/database.done.sql
fi
{{ end }}

{{ end }} 
##end of all containers
{{ end }} 
##end of all databases
