<?php
  $dbData = [];
  // add mySQL data
{{ $CurrentContainer := where $ "ID" .Docker.CurrentContainerID | first }}
{{ if $CurrentContainer.Env.MYSQL_DB }}
 {{ range $mysqlServerPWD, $containers := groupByMulti $ "Env.MYSQL_ROOT_PWD" "," }}
  //$rootPwd = '{{ $mysqlServerPWD }}';

  {{ range $index, $container := $containers }}
   {{ $mySqlPort := or $container.Env.MYSQL_PORT "3306" }}
    $port = '{{ $mySqlPort }}';
   {{ range $containerNetwork := $container.Networks }}
    $host = '{{ $containerNetwork.IP }}';
    $dbName = '{{ $CurrentContainer.Env.MYSQL_DB }}';
    {{ if $CurrentContainer.Env.MYSQL_USER }}
    $user = '{{ $CurrentContainer.Env.MYSQL_USER }}';
    {{ else }}
    $user = 'U:'.md5($dbName);
    {{ end }}
    {{ if $CurrentContainer.Env.MYSQL_PWD }}
    $password = '{{ $CurrentContainer.Env.MYSQL_PWD }}';
    {{ else }}
    $password = 'PWD:'.md5($user.":".'{{ sha1 $mysqlServerPWD }}');
    {{ end }}
    $dbData['mysql:'.$dbName] = 
     ['type' => 'mysql', 'host' => $host, 'port' => $port, 
      'dbname' => $dbName, 'user' => $user, 'password' => $password, 
       'pdo' => "mysql:host=$host:$port;dbname=$dbName;user=$user;password=$password"];
   {{ end }}
  {{ end }} 
 {{ end }} 
{{ end }}

  function inqDbConnections()
  {
    global $dbData; 
    return $dbData; 
  }
?>

