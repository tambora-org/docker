# Current Container Name : {{ $CurrentContainer.Name }}
{{ $CurrentDomain := or $CurrentContainer.Env.CRE_DOMAIN "localhost" }}
[ req ]
default_bits        = 2048
default_keyfile     = server-key.pem
distinguished_name  = cre
req_extensions      = req_ext
x509_extensions     = x509_ext
string_mask         = utf8only

# The Subject DN can be formed using X501 or RFC 4514 (see RFC 4519 for a description).
#   Its sort of a mashup. For example, RFC 4514 does not provide emailAddress.
[cre]
C = DE
countryName         = DE
countryName_default     = DE

ST = BW
stateOrProvinceName     = BW
stateOrProvinceName_default = BW

L = Freiburg
localityName            = Freiburg
localityName_default        = Freiburg

O = University Freiburg
organizationName         = University Freiburg
organizationName_default    = University Freiburg
OU = Geography
## CN = www.tambora.org
CN = www.{{ $CurrentDomain }}

# Use a friendly name here because its presented to the user. The server's DNS
#   names are placed in Subject Alternate Names. Plus, DNS names here is deprecated
#   by both IETF and CA/Browser Forums. If you place a DNS name here, then you 
#   must include the DNS name in the SAN too (otherwise, Chrome and others that
#   strictly follow the CA/Browser Baseline Requirements will fail).
## commonName              = tambora.org
## commonName_default      = tambora.org
commonName              = {{ $CurrentDomain }}
commonName_default      = {{ $CurrentDomain }}

## emailAddress            = test@example.com
## emailAddress_default    = test@example.com
emailAddress            = admin@{{ $CurrentDomain }}
emailAddress_default    = admin@{{ $CurrentDomain }}

# Section x509_ext is used when generating a self-signed certificate. I.e., openssl req -x509 ...
[ x509_ext ]

subjectKeyIdentifier        = hash
authorityKeyIdentifier  = keyid,issuer

# You only need digitalSignature below. *If* you don't allow
#   RSA Key transport (i.e., you use ephemeral cipher suites), then
#   omit keyEncipherment because that's key transport.
basicConstraints    = CA:FALSE
keyUsage            = digitalSignature, keyEncipherment
subjectAltName      = @alternate_names
nsComment           = "OpenSSL Generated Certificate"

# RFC 5280, Section 4.2.1.12 makes EKU optional
#   CA/Browser Baseline Requirements, Appendix (B)(3)(G) makes me confused
#   In either case, you probably only need serverAuth.
# extendedKeyUsage  = serverAuth, clientAuth

# Section req_ext is used when generating a certificate signing request. I.e., openssl req ...
[ req_ext ]

subjectKeyIdentifier  = hash

basicConstraints    = CA:FALSE
keyUsage            = digitalSignature, keyEncipherment
subjectAltName      = @alternate_names
nsComment           = "OpenSSL Generated Certificate"

# RFC 5280, Section 4.2.1.12 makes EKU optional
#   CA/Browser Baseline Requirements, Appendix (B)(3)(G) makes me confused
#   In either case, you probably only need serverAuth.
# extendedKeyUsage  = serverAuth, clientAuth

[ alternate_names ]

# Add these if you need them. But usually you don't want them or
#   need them in production. You may need them for development.
#DNS.1       = localhost
#DNS.2       = 127.0.0.1

{{ $CurrentDomain := or $CurrentContainer.Env.CRE_DOMAIN "localhost" }}
DNS.1 = {{ $CurrentDomain }}

{{ range $subdomain, $containers := groupByMulti $ "Env.CRE_SUBDOMAIN" "," }}

{{ $subdomain := trim $subdomain }}
{{ $host := (printf "%s.%s" $subdomain $CurrentDomain) }}

DNS.{{ $subdomain }}  = {{ $host }}

{{ end }}


# IPv6 localhost
# DNS.8     = ::1
